{"version":3,"sources":["components/composer/Composer.tsx","components/header/Header.tsx","components/todoList/TodoListItem.tsx","components/todoList/TodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Composer","addTodo","useState","desc","setDesc","onSubmit","e","preventDefault","id","v4","done","className","placeholder","value","onChange","target","type","Header","TodoListItem","todo","updateTodo","removeTodo","onClick","TodoList","todos","map","t","App","setTodos","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","temp","index","findIndex","splice","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SASaA,G,MAA6B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAC/BC,mBAAiB,IADc,mBAChDC,EADgD,KAC1CC,EAD0C,KAavD,OACE,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBACFN,EAAQ,CACNO,GAAIC,cACJN,OACAO,MAAM,IAERN,EAAQ,KAIR,SACE,sBAAKO,UAAU,OAAf,UACE,8BAAK,0BAAUC,YAAY,cAAcC,MAAOV,EAAMW,SAAU,SAACR,GAAD,OAAOF,EAAQE,EAAES,OAAOF,YACxF,8BAAK,wBAAQG,KAAK,SAAb,+BCvBAC,G,MAAmB,WAE9B,OACE,sBAAKN,UAAU,SAAf,UACE,0CACA,uD,eCEOO,EAAiC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAEjE,OACE,qBAAIV,UAAWQ,EAAKT,KAAO,OAAS,WAApC,UACIS,EAAKhB,KACP,wBAAQmB,QAAS,kBAAMF,EAAW,2BAC7BD,GAD4B,IAE/BT,MAAOS,EAAKT,SAFd,SAGMS,EAAKT,KAAO,aAAe,aACjC,wBAAQY,QAAS,kBAAMD,EAAWF,IAAlC,wBCPOI,EAA6B,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,MAAOJ,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,WAC7D,OACE,6BACGG,EAAMC,KAAI,SAAAC,GAAC,OACV,cAAC,EAAD,CAAyBP,KAAMO,EAAGN,WAAYA,EAAYC,WAAYA,GAAnDK,EAAElB,UC0CdmB,MAnDf,WAAgB,IAAD,EACazB,mBAAkB,IAD/B,mBACNsB,EADM,KACCI,EADD,KAwCb,OAhCAC,qBALiB,WACf,IAAIL,EAAQM,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MACxDL,EAASJ,KAGS,IA8BpBK,qBAJkB,WAChBG,aAAaE,QAAQ,QAASJ,KAAKK,UAAUX,MAG1B,CAACA,IAGpB,qCACE,cAAC,EAAD,IACA,sBAAKb,UAAU,YAAf,UACE,cAAC,EAAD,CAAUa,MAAOA,EAAOH,WAzBX,SAACF,GAClB,IAAMiB,EAAa,YAAOZ,GACpBa,EAAQD,EAAKE,WAAU,SAAAZ,GAAC,OAAIA,EAAElB,KAAOW,EAAKX,MAEhD4B,EAAKG,OAAOF,GAEZT,EAASQ,IAmB2ChB,WAlCnC,SAACD,GAClB,IAAMiB,EAAa,YAAOZ,GACpBa,EAAQD,EAAKE,WAAU,SAAAZ,GAAC,OAAIA,EAAElB,KAAOW,EAAKX,MAEhD4B,EAAKC,GAASlB,EAEdS,EAASQ,MA6BL,cAAC,EAAD,CAAUnC,QAjBA,SAACkB,GACf,IAAMiB,EAAa,YAAOZ,GAC1BY,EAAKI,KAAKrB,GACVS,EAASQ,aCxBEK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e74b05a4.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { v4 } from 'uuid';\nimport { todoAction } from '../../types/todoAction';\nimport './Composer.css';\n\ninterface IProps {\n  addTodo: todoAction;\n}\n\nexport const Composer: React.FC<IProps> = ({addTodo}) => {\n  const [desc, setDesc] = useState<string>('');\n  \n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    addTodo({\n      id: v4(),\n      desc,\n      done: false\n    })\n    setDesc('');\n  }\n  \n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"form\">\n        <div><textarea placeholder=\"Add Todo...\" value={desc} onChange={(e) => setDesc(e.target.value)}></textarea></div>\n        <div><button type=\"submit\">Add Todo</button></div>\n      </div>\n    </form>\n  )\n}","import React from 'react';\nimport './Header.css';\n\nexport const Header: React.FC = () => {\n\n  return (\n    <div className=\"header\">\n      <h1>Do Stuff</h1>\n      <small>you lazy nerd</small>\n    </div>\n  )\n}","import React from 'react'\nimport { ITodo } from '../../models/todo'\nimport { todoAction } from '../../types/todoAction'\n\ninterface IProps {\n  todo: ITodo;\n  updateTodo: todoAction;\n  removeTodo: todoAction;\n}\n\nexport const TodoListItem: React.FC<IProps> = ({ todo, updateTodo, removeTodo }) => {\n\n  return (\n    <li className={todo.done ? 'done' : 'not-done'}>\n      { todo.desc}\n      <button onClick={() => updateTodo({\n        ...todo,\n        done: !todo.done\n      })}>{ todo.done ? 'Undo Thing' : 'Do Thing' }</button >\n      <button onClick={() => removeTodo(todo)}>Remove</button >\n    </li >\n  )\n}","import React from 'react'\nimport { ITodo } from '../../models/todo'\nimport { todoAction } from '../../types/todoAction'\nimport \"./TodoList.css\"\nimport { TodoListItem } from './TodoListItem'\n\ninterface IProps {\n  todos: ITodo[];\n  updateTodo: todoAction;\n  removeTodo: todoAction;\n}\n\nexport const TodoList: React.FC<IProps> = ({todos, updateTodo, removeTodo}) => {\n  return (\n    <ul>\n      {todos.map(t => (\n        <TodoListItem key={t.id} todo={t} updateTodo={updateTodo} removeTodo={removeTodo} />\n      ))}\n    </ul>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Composer } from './components/composer/Composer';\nimport { Header } from './components/header/Header';\nimport { TodoList } from './components/todoList/TodoList';\nimport { ITodo } from './models/todo';\n\nfunction App() {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  const getTodos = () => {\n    let todos = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(todos);\n  }\n\n  useEffect(getTodos, []);\n  \n  const updateTodo = (todo: ITodo) => {\n    const temp: ITodo[] = [...todos];\n    const index = temp.findIndex(t => t.id === todo.id);\n    \n    temp[index] = todo;\n    \n    setTodos(temp);\n  }\n  \n  const removeTodo = (todo: ITodo) => {\n    const temp: ITodo[] = [...todos];\n    const index = temp.findIndex(t => t.id === todo.id);\n    \n    temp.splice(index);\n    \n    setTodos(temp);\n  }\n  \n  const addTodo = (todo: ITodo) => {\n    const temp: ITodo[] = [...todos];\n    temp.push(todo);\n    setTodos(temp);\n  }\n  \n  const saveTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  useEffect(saveTodos, [todos]);\n\n  return (\n    <>\n      <Header/>\n      <div className=\"container\">\n        <TodoList todos={todos} removeTodo={removeTodo} updateTodo={updateTodo} />\n        <Composer addTodo={addTodo} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}